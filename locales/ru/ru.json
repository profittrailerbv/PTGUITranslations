{
  "logo": {
    "profit": "Profit",
    "trailer": "Trailer"
  },
  "dtMsgs": {
    "noRecords": "Нет записей.",
    "totalRecords": "Всего записей",
    "excel": "Excel",
    "search": "Поиск",
    "showEntries": "Показать _MENU_",
    "all": "all",
    "previous": "Предыдущий",
    "next": "Следующий",
    "filtered": "(filtered from _MAX_ total records)"
  },
  "sidebar": {
    "monitoring": "Мониторинг",
    "possibleBuyLog": "Возможно купить",
    "pairsLog": "Pairs",
    "dcaLog": "ДЦА",
    "pendingLog": "В ожидании",
    "salesLog": "Продажи",
    "dustLog": "Пыль",
    "config": "Конфиг",
    "buyLog": "Куплено",
    "apiLogs": "Логи",
    "news": "Новости",
    "shorting": "Shorting",
    "proTools": "Про",
    "activeConfig": "Активный конфиг",
    "otherConfigs": "Ост. конфиги",
    "miscCoins": "Misc. Монеты",
    "reservedLog": "Резерв. Монеты",
    "reversalLog": "Reversal Монеты",
    "notifications": "Уведомления",
    "stats": "Stats",
    "account": "Аккаунт",
    "hotconfig": "Горячий Крнфиг",
    "ptfeeder": "PTFeeder"
  },
  "news": {
    "postedOn": "Posted on"
  },
  "pageHeadings": {
    "configuration": "Конфигурация",
    "totalLog": "Всего логов"
  },
  "configOptions": {
    "pairs": "Пары",
    "dca": "ДЦА",
    "indicators": "Индикаторы",
    "hotConfig": "HotConfig",
    "default": "По умолчанию",
    "notSaved": "Не сохранено!"
  },
  "proTools": {
    "dashboard": "Дашборд",
    "dcaCalculator": "Калькулятор"
  },
  "dailyProfitTable": {
    "date": {
      "colTitle": "Дата",
      "colName": "Дата"
    },
    "sells": {
      "colTitle": "Продажи",
      "colName": "Продажи"
    },
    "boughtCost": {
      "colTitle": "Цена покупки",
      "colName": "Цена покупки"
    },
    "soldValue": {
      "colTitle": "Проданная стоимость",
      "colName": "Проданная стоимость"
    },
    "profits": {
      "colTitle": "Прибыль",
      "colName": "Прибыль"
    },
    "profitPerc": {
      "colTitle": "Прибыль %",
      "colName": "Прибыль %"
    }
  },
  "summaryItems": {
    "balance": {
      "title": "Баланс",
      "label": "Бал"
    },
    "testMode": {
      "label": "Тестовый режим"
    },
    "testNet": {
      "label": "Тестовая сеть"
    },
    "NotAvailable": {
      "label": "Н/А"
    },
    "price": {
      "title": "Цена",
      "label": "Цена"
    },
    "tcv": {
      "title": "Общая текущая стоимость",
      "label": "ОТС"
    },
    "sb": {
      "title": "Стартовый балан",
      "label": "СБ"
    },
    "profit": {
      "title": "Прибыль",
      "label": "П",
      "fullText": "Прибыль"
    },
    "lw": {
      "title": "Прибыль за прошлую Неделю",
      "label": "ПН"
    },
    "yd": {
      "title": "Прибыль за Вчера",
      "label": "ПВ"
    },
    "td": {
      "title": "Прибыль Сегодня",
      "label": "ПС"
    },
    "trend": {
      "title": "Тренд",
      "label": "Т",
      "suffix": "Последние 24ч!"
    },
    "imageTitles": {
      "fullScreen": "Полный экран"
    },
    "updated": "Обновленно {{- timeAgo}}",
    "marginTrading": {
      "label": "MARGIN"
    }
  },
  "settingInfo": {
    "active": "Active",
    "reset": "Сброс",
    "uptime": {
      "title": "Аптайм ProfitTrailer",
      "label": "Аптайм: "
    },
    "chngePswrd": {
      "label": "Изменить Пароль",
      "title": "Role should be \"{{ role }}\" to change passwords.",
      "tabs": {
        "admin": "Admin password",
        "moniter": "Monitor password"
      }
    },
    "noPswrdAndConfig": {
      "title": "Please enable password/config in your application file to enable this function."
    },
    "noEnableShutdown": {
      "title": "Please enable password/shutdown in your application file to enable this function."
    },
    "incorrectRole": {
      "title": "Login in as Admin to get access to these buttons."
    },
    "noPswrd": {
      "title": "Please enable password in your application file to enable this function."
    },
    "market": {
      "label": "Market: ",
      "title": "Your Exchange and Coin"
    },
    "currency": {
      "title": "Currency"
    },
    "config": {
      "label": "Config: ",
      "title": "Can be changed in Application file"
    },
    "password": {
      "label": "Password: ",
      "title": "Can be changed in Application file"
    },
    "som": {
      "label": "SOM: "
    },
    "somOnOff": {
      "label": "SOM",
      "subLabel": "SOM Inactive/Active",
      "title": "Sell Only Mode",
      "globalLabel": "Global SOM",
      "ON": "ON",
      "OFF": "OFF"
    },
    "somo": {
      "label": "SOMO: ",
      "title": "Sell Only Mode Override"
    },
    "heartbeats": {
      "label": "Heartbeats"
    },
    "settings": {
      "label": "Settings"
    },
    "somoOnOff": {
      "label": "SOMO",
      "subLabel": "SOMO Inactive/Active",
      "optionOne": "Disabled",
      "optionTwo": "Forced ON",
      "optionThree": "Forced OFF"
    },
    "time": {
      "label": "Time: ",
      "title": "Current Timezone time"
    },
    "utc": {
      "title": "Exchange Server Time / UTC",
      "labelFullText": "UTC Time:",
      "labelShortText": "UTC:"
    },
    "logout": {
      "label": "Logout"
    },
    "setup": {
      "label": "Setup"
    },
    "changeConfig": {
      "label": "Public Configs",
      "title": "Role should be \"{{ role }}\" to download configs."
    }
  },
  "monitoringSection": {
    "feed": "News",
    "signal": "Subscriptions",
    "topFiveMarkets": {
      "btc": "BTC ",
      "eth": "ETH ",
      "xrp": "XRP ",
      "bch": "BCH ",
      "ltc": "LTC "
    },
    "pairsBal": {
      "label": "Pairs Balance"
    },
    "dcaBal": {
      "label": "DCA Balance"
    },
    "coinTopMarket": {
      "title": "CoinGecko Top 5 Coins"
    },
    "volume": {
      "label": "Volume"
    },
    "trade": {
      "label": "Trades"
    },
    "globalMarket": {
      "totalMarketCap": "Total Market Cap",
      "total24HrsVol": "Total 24 Hour Volume",
      "bitcoinMarketCap": "Bitcoin % of Market Cap",
      "title": "CoinGecko - Total"
    },
    "usdFullText": " Estimated Value",
    "usdShortText": " Est. Value",
    "gainFullText": "Estimated Gain",
    "gainShortText": "Est. Gain",
    "heading": "Monitoring",
    "tcvDust": {
      "label": "TCV with Dust",
      "title": "Total Current Value with your Dust"
    },
    "notification": "Notification",
    "trendContainerFirstPart": "The % trend of 50 top ",
    "trendContainerSecondPart": "coins from your market the last 24 hours",
    "trend24H": "Trend 24H",
    "balance": {
      "title": "Your current Balance not locked in bags",
      "mainText": "Balance",
      "usdFullText": "Estimated USD Value",
      "usdShortText": "Est. USD Value"
    },
    "tcv": {
      "title": "The current value of your bags",
      "mainText": "Total Current Value",
      "usdFullText": "Estimated USD Value",
      "usdShortText": "Est. USD Value"
    },
    "sb": {
      "title": "Your Start Balance. Can be set in your PAIRS.properties.",
      "mainText": "Start Balance",
      "usdFullText": "Estimated USD Value",
      "usdShortText": "Est. USD Value"
    },
    "btcUsd": {
      "title": "Last BTCUSDT price from your Market",
      "mainText": "BTC USDT Price"
    },
    "trendUsd1H": {
      "mainText": "Trend USD last 1H "
    },
    "trendUsd24H": {
      "mainText": "Trend USD last 24H "
    },
    "trendUsd7D": {
      "mainText": "Trend USD last 7D "
    },
    "trendUsdTill7D": {
      "title": "Average % Trend last hour, last 24 hours and last 7 days of top 20 altcoins USD Market (CoinGecko)"
    },
    "profitLW": {
      "title": "Your profit from 7 Days",
      "mainText": "Profit Last 7 Days",
      "usdFullText": "Estimated USD Value",
      "usdShortText": "Est. USD Value"
    },
    "profitYday": {
      "title": "Your profit from yesterday",
      "mainText": "Profit Yesterday",
      "usdFullText": "Estimated USD Value",
      "usdShortText": "Est. USD Value"
    },
    "profitToday": {
      "title": "Your profit from today",
      "mainText": "Profit Today",
      "usdFullText": "Estimated USD Value",
      "usdShortText": "Est. USD Value"
    },
    "pot": {
      "title": "Pending Order Time",
      "label": "POT:",
      "pwTitle": "Can be changed in Application file",
      "pwText": "PW:",
      "conText": "CON:",
      "somText": "SOM:",
      "somoTitle": "Sell Only Mode Override",
      "somoText": "SOMO:",
      "ptvTitle": "ProfitTrailer Version",
      "guiVerTitle": "GUI Version",
      "guiVer": "GUI Ver: ",
      "pLetter": "P",
      "tLetter": "T",
      "marketTitle": "Your Exchange and Trading Coin",
      "marketLabel": "Market:",
      "ver": "Ver:"
    },
    "pairsLog": {
      "title": "The current value of your pair coins",
      "fullText": "Current Value",
      "shortText": "CV",
      "diffTitle": "The difference between Current Value and Bought Cost",
      "diffFullText": "Difference",
      "boughtCostTitle": "The bought cost of your pair coins",
      "bcFullText": "Bought Cost",
      "bcShortText": "BC",
      "label": "PAIRS LOG"
    },
    "dcaLog": {
      "title": "The current value of your DCA coins",
      "fullText": "Current Value",
      "shortText": "CV",
      "diffTitle": "The difference between Current Value and Total Cost",
      "diffFullText": "Difference",
      "totalCostTitle": "The total cost of your DCA coins",
      "tcFullText": "Total Cost",
      "tcShortText": "TC",
      "label": "DCA LOG"
    },
    "pendingLog": {
      "title": "The current value of your pending coins",
      "fullText": "Current Value",
      "shortText": "CV",
      "diffTitle": "The difference between Current Value and Target Value",
      "diffFullText": "Difference",
      "targetValueTitle": "The target value of your pending coins",
      "tvFullText": "Target Value",
      "tvShortText": "TV",
      "label": "PENDING LOG"
    },
    "salesLog": {
      "title": "The bought cost of your sold coins",
      "fullText": "Bought Cost",
      "shortText": "BC",
      "diffTitle": "The difference between Bought Cost and Sold Value",
      "diffFullText": "Difference",
      "soldValueTitle": "The sold value of your sold coins",
      "svFullText": "Sold Value",
      "svShortText": "SV",
      "label": "SALES LOG"
    },
    "reversalBal": {
      "label": "Reversal Balance"
    }
  },
  "psbSection": {
    "coin": {
      "colName": "Coin",
      "colTitle": "Coin Pair"
    },
    "24H": {
      "colName": "%",
      "colTitle": "24 Hour % Change"
    },
    "buyStrat": {
      "colName": "Buy",
      "colTitle": "Buy Strategy"
    },
    "currPrice": {
      "colName": "Ask Price",
      "colTitle": "Ask Price"
    },
    "vol": {
      "colName": "VOL",
      "colTitle": "Volume"
    },
    "currBB": {
      "colName": "Current BB",
      "colTitle": "Current Bollinger Band"
    },
    "currVal": {
      "colName": "BSV",
      "colTitle": "Buy Strategy Value"
    },
    "buyVal": {
      "colName": "BST",
      "colTitle": "Buy Strategy Trigger"
    },
    "buyLimit": {
      "colName": "BSL",
      "colTitle": "Buy Strategy Limit"
    }
  },
  "dataTableSection": {
    "firstDate": {
      "colName": "First Date"
    },
    "firstTime": {
      "colName": "First Time"
    },
    "firstTimeSince": {
      "colName": "First Time Since"
    },
    "lastDate": {
      "colName": "Last Date"
    },
    "lastTime": {
      "colName": "Last Time"
    },
    "lastTimeSince": {
      "colName": "Last Time Since"
    },
    "buyTrigger": {
      "colName": "BTG%",
      "colTitle": "Buy Strategy Trigger"
    },
    "sellTrigger": {
      "colName": "STG%",
      "colTitle": "Sell Strategy Trigger"
    },
    "currValCurrency": {
      "colTitle": "Current Value {{currency}}"
    },
    "stratVal": {
      "colName": "SSV",
      "colTitle": "Sell Strategy Value"
    },
    "stratTrigger": {
      "colName": "SST",
      "colTitle": "Sell Strategy Trigger"
    },
    "currVal": {
      "colName": "Current Value"
    },
    "boughtCostCurrency": {
      "colTitle": "Bought Cost {{currency}}"
    },
    "date": {
      "colName": "Date"
    },
    "time": {
      "colName": "Time"
    },
    "timeSince": {
      "colName": "Time Since"
    },
    "trigger": {
      "colName": "Trigger"
    },
    "currPrice": {
      "colName": "Bid Price"
    },
    "avgPrice": {
      "colName": "Average Price"
    },
    "targetValue": {
      "colName": "Target Value"
    },
    "targetPrice": {
      "colName": "Target Price"
    },
    "AM": {
      "label": " AM"
    },
    "PM": {
      "label": " PM"
    },
    "liqPrice": {
      "colName": "Liq. Price",
      "colTitle": "Liquid Price"
    },
    "actions": {
      "colName": "Actions"
    },
    "avgCurrentTargetSoldPrice": {
      "colName": "Avg. Price<br>Cur. Price<br>Target Price<br>Sold Price"
    },
    "currentDeltaTargetSoldProfitPercentage": {
      "colName": "Current Profit<br>Target Profit<br>Sold Profit"
    }
  },
  "buyLogSection": {
    "boughtAmount": {
      "colName": "Bought Amount",
      "colTitle": "Bought Amount"
    },
    "boughtCost": {
      "colName": "Bought Cost",
      "colTitle": "Bought Cost"
    },
    "firstTrailDate": {
      "colName": "First Trail Date"
    },
    "firstTrailTime": {
      "colName": "First Trail Time"
    },
    "firstTrailTimeSince": {
      "colName": "First Trail Time Since"
    },
    "date": {
      "colName": "Date",
      "colTitle": "Date (Time Since)"
    },
    "firstTrail": {
      "colName": "First Trail",
      "colTitle": "First Trail"
    },
    "order": {
      "colName": "Order Number",
      "colTitle": "Order Number"
    },
    "coin": {
      "colName": "Coin",
      "colTitle": "Coin Pair"
    },
    "boughtPrice": {
      "colName": "Bought Price",
      "colTitle": "Bought Price"
    },
    "volume": {
      "colName": "VOL",
      "colTitle": "Volume"
    },
    "buyType": {
      "colName": "Buy Type",
      "colTitle": "Buy Type"
    },
    "buy": {
      "colName": "Buy",
      "colTitle": "Buy"
    },
    "buyStratValue": {
      "colName": "BSV",
      "colTitle": "Buy Strategy Value"
    },
    "buyStratTrigger": {
      "colName": "BST",
      "colTitle": "Buy Strategy Trigger"
    },
    "buyStrategyLimit": {
      "colName": "BSL",
      "colTitle": "Buy Strategy Limit"
    }
  },
  "pairsLogSection": {
    "date": {
      "colName": "Date",
      "colTitle": "Date (Time Since)"
    },
    "coin": {
      "colName": "Coin",
      "colTitle": "Coin Pair"
    },
    "24H": {
      "colName": "%",
      "colTitle": "24 Hour % Change"
    },
    "sellStrat": {
      "colName": "Sell",
      "colTitle": "Sell Strategy"
    },
    "currPrice": {
      "colName": "Bid Price",
      "colTitle": "Bid Price"
    },
    "currPriceBoughtPrice": {
      "colName": "Bid Price <br> Bought Price",
      "colTitle": "Bid Price <br> Bought Price"
    },
    "boughtrPrice": {
      "colName": "Bought Price",
      "colTitle": "Bought Price"
    },
    "profit": {
      "colName": "P%",
      "colTitle": "Profit and Order Book Profit in %"
    },
    "trigger": {
      "colName": "TG%",
      "colTitle": "Trigger"
    },
    "vol": {
      "colName": "VOL",
      "colTitle": "Volume"
    },
    "totalAmount": {
      "colName": "TAM",
      "colTitle": "Total Amount"
    },
    "currVal": {
      "colName": "Current Value",
      "colTitle": "Current Value"
    },
    "currValBoughtCost": {
      "colName": "Current Value <br> Bought Cost",
      "colTitle": "Current Value <br> Bought Cost"
    },
    "boughtCost": {
      "colName": "Bought Cost",
      "colTitle": "Bought Cost"
    },
    "boughtCostCurrency": {
      "colTitle": "Currency Value <br> Bought Cost"
    },
    "summaryTable": {
      "cv": "CV",
      "currVal": "Current Value",
      "d": "D",
      "diff": "Difference",
      "bc": "BC",
      "boughtCost": "Bought Cost"
    },
    "liqPrice": {
      "colName": "Liq. Price",
      "colTitle": "Liquid Price"
    },
    "currPriceBoughtPriceLiqPrice": {
      "colName": "Bid Price <br> Bought Price <br> Liquid Price",
      "colTitle": "Bid Price <br> Bought Price <br> Liquid Price"
    }
  },
  "dcaLogSection": {
    "currentTotalCstValCurrency": {
      "colTitle": "Current Value {{currency}}<br>Total Cost {{currency}}"
    },
    "sellStratVal": {
      "colName": "SSV",
      "colTitle": "Sell Strategy Value"
    },
    "buyStratVal": {
      "colName": "BSV",
      "colTitle": "Buy Strategy Value"
    },
    "BB": {
      "colName": "BB"
    },
    "date": {
      "colName": "Date",
      "colTitle": "Date (Time Since)"
    },
    "coin": {
      "colName": "Coin",
      "colTitle": "Coin Pair"
    },
    "24H": {
      "colName": "%",
      "colTitle": "24 Hour % Change"
    },
    "buyStrat": {
      "colName": "Buy",
      "colTitle": "Buy Strategy"
    },
    "bt": {
      "colName": "BT%",
      "colTitle": "Buy Trigger"
    },
    "buyEntryTrigger": {
      "colName": "BSTV",
      "colTitle": "Buy Strategy Trigger Value"
    },
    "buyEntryVal": {
      "colName": "BST",
      "colTitle": "Buy Strategy Trigger"
    },
    "sellEntryVal": {
      "colName": "SST",
      "colTitle": "Sell Strategy Trigger"
    },
    "sellStrat": {
      "colName": "Sell",
      "colTitle": "Sell Strategy"
    },
    "currPrice": {
      "colName": "Bid.Pr<br>Avg.Pr",
      "colTitle": "Bid Price<br>Average Price"
    },
    "profit": {
      "colName": "P%",
      "colTitle": "Profit and Order Book Profit in %"
    },
    "vol": {
      "colName": "VOL",
      "colTitle": "Volume"
    },
    "totalAmount": {
      "colName": "TAM",
      "colTitle": "Total Amount"
    },
    "currVal": {
      "colName": "Cur.Val<br>Tot.Cost",
      "colTitle": "Current Value<br>Total Cost"
    },
    "totalCost": {
      "colName": "Total Cost",
      "colTitle": "Total Cost"
    },
    "summaryTable": {
      "cv": "CV",
      "currVal": "Current Value",
      "d": "D",
      "diff": "Difference",
      "tc": "TC",
      "totalCost": "Total Cost"
    },
    "currPriceLiquidPrice": {
      "colName": "Bid.Pr<br>Avg.Pr<br>Liq.Pr",
      "colTitle": "Bid Price<br>Average Price<br>Liquid Price"
    }
  },
  "pendingLogSection": {
    "targetCurrentValCurrency": {
      "colTitle": " Current Value {{currency}}<br>Target Value {{currency}}"
    },
    "coin": {
      "colName": "Coin",
      "colTitle": "Coin Pair"
    },
    "24H": {
      "colName": "%",
      "colTitle": "24 Hour % Change"
    },
    "sellStrat": {
      "colName": "Sell",
      "colTitle": "Sell Strategy"
    },
    "currPrice": {
      "colName": "Bid Price",
      "colTitle": "Bid Price"
    },
    "currPriceTargetPrice": {
      "colName": "Bid Price<br>Target Price",
      "colTitle": "Bid Price<br>Target Price"
    },
    "profit": {
      "colName": "P%",
      "colTitle": "Profit in %"
    },
    "comboProfit": {
      "colName": "CP%",
      "colTitle": "Combined Profit in %"
    },
    "trigger": {
      "colName": "TG%",
      "colTitle": "Trigger Value in %"
    },
    "totalAmount": {
      "colName": "TAM",
      "colTitle": "Total Amount"
    },
    "currVal": {
      "colName": "Cur.Val<br>Tar.Val",
      "colTitle": "Current Value<br>Target Value"
    },
    "targetVal": {
      "colName": "Target Value",
      "colTitle": "Target Value"
    },
    "summaryTable": {
      "cv": "CV",
      "currVal": "Current Value",
      "d": "D",
      "diff": "Difference",
      "tv": "TV",
      "targetVal": "Target Value"
    }
  },
  "salesLogSection": {
    "boughtSoldPrice": {
      "colName": "Bought Price<br>Sold Price"
    },
    "boughtSoldValue": {
      "colName": "Bought Cost<br>Sold Value"
    },
    "boughtSoldValueCurrency": {
      "colTitle": "Bought Cost {{currency}}<br>Sold Value {{currency}}"
    },
    "soldValueCurrency": {
      "colTitle": "Sold Value {{currency}}"
    },
    "coin": {
      "colName": "Coin",
      "colTitle": "Coin Pair"
    },
    "sellStrat": {
      "colName": "Sell",
      "colTitle": "Sell Strategy"
    },
    "date": {
      "colName": "Date",
      "colTitle": "Date (Time Since)"
    },
    "boughtPrice": {
      "colName": "Bought Price",
      "colTitle": "Bought Price"
    },
    "soldPrice": {
      "colName": "Sold Price",
      "colTitle": "Sold Price"
    },
    "profit": {
      "colName": "P%",
      "colTitle": "Profit in %"
    },
    "trigger": {
      "colName": "TG%",
      "colTitle": "Trigger"
    },
    "profitUSD": {
      "colName": "Profit <span class='api-market'></span>",
      "colTitle": "Profit in your Market and USD "
    },
    "soldAmount": {
      "colName": "SAM",
      "colTitle": "Sold Amount"
    },
    "boughtCost": {
      "colName": "Bought Cost",
      "colTitle": "Bought Cost"
    },
    "boughtCostCurrency": {
      "colTitle": "Bought Cost {{currency}}"
    },
    "soldValue": {
      "colName": "Sold Value",
      "colTitle": "Sold Value"
    },
    "profitSolo": {
      "colName": "Profit {{- market}}",
      "colTitle": "Profit {{market}}"
    },
    "profitCurrency": {
      "colTitle": "Profit {{currency}}"
    },
    "summaryTable": {
      "sv": "SV",
      "soldVal": "Sold Value",
      "d": "D",
      "diff": "Difference",
      "bc": "BC",
      "boughtCost": "Bought Cost"
    }
  },
  "dustLogSection": {
    "date": {
      "colName": "Date",
      "colTitle": "Date (Time Since)"
    },
    "coin": {
      "colName": "Coin",
      "colTitle": "Coin Pair"
    },
    "24H": {
      "colName": "%",
      "colTitle": "24 Hour % Change"
    },
    "currPriceBoughtPrice": {
      "colName": "Bid Price <br> Bought Price",
      "colTitle": "Bid Price <br> Bought Price"
    },
    "currPrice": {
      "colName": "Bid Price",
      "colTitle": "Bid Price"
    },
    "boughtPrice": {
      "colName": "Bought Price",
      "colTitle": "Bought Price"
    },
    "profit": {
      "colName": "P%",
      "colTitle": "Profit in %"
    },
    "trigger": {
      "colName": "TG%",
      "colTitle": "Trigger Value in %"
    },
    "vol": {
      "colName": "VOL",
      "colTitle": "Volume"
    },
    "totalAmount": {
      "colName": "TAM",
      "colTitle": "Total Amount"
    },
    "currValBoughtCost": {
      "colName": "Current Value <br> Bought Cost",
      "colTitle": "Current Value <br> Bought Cost"
    },
    "currVal": {
      "colName": "Current Value",
      "colTitle": "Current Value"
    },
    "boughtCost": {
      "colName": "Bought Cost",
      "colTitle": "Bought Cost"
    },
    "boughtCostCurrency": {
      "colTitle": "Currency Value {{currency}} <br> Bought Cost {{currency}}"
    },
    "summaryTable": {
      "cv": "CV",
      "currVal": "Current Value",
      "d": "D",
      "diff": "Difference",
      "bc": "BC",
      "boughtCost": "Bought Cost"
    }
  },
  "footer": {
    "stopPFTrailer": "Stop ProfitTrailer",
    "ptVersion": "ProfitTrailer Version",
    "ver": "Ver:",
    "pendingOrder": "Pending Order Time",
    "pot": "POT:",
    "wiki": "Wiki",
    "profitTrailer": "ProfitTrailer",
    "pt": "PT",
    "pLetter": "P",
    "tLetter": "T",
    "gui": "GUI:",
    "discord": "Discord",
    "shop": "Shop"
  },
  "constantMsgs": {
    "somoSuccess": "SOMO value changed successfully",
    "ptMonitor": "ProfitTrailer Monitor",
    "ajaxError": "There was an error while refreshing the data from ProfitTrailer. Please check your connection. If your connection is fine refresh the page and have a pint.",
    "processingError": "There was an error while processing the data received from ProfitTrailer. Please give ProfitTrailer some love, make a coffee and all will be good soon.",
    "configSuccess": "You have successfully saved the data",
    "configNotSave": "Changes that you made are not saved. Do you still want to leave this page?",
    "onPassword": "On",
    "offPassword": "Off",
    "onConfig": "On",
    "offConfig": "Off",
    "unsaveChange": "(Unsaved changes)",
    "save": " Save Config",
    "noNotifications": "No notifications.",
    "noSignals": "No Subscriptions.",
    "noHeartbeats": "No heartbeats.",
    "viewAll": "View all",
    "viewLess": "View less",
    "true": "true",
    "false": "false",
    "somtrue": "true",
    "somfalse": "false",
    "somotrue": "active",
    "somofalse": "inactive",
    "search": "Search",
    "newButton": "New Config",
    "publishButton": "Publish",
    "backupButton": "Download Config Files",
    "downloadLogs": "Download Logs",
    "hotConfig": "HotConfig",
    "delete": "Delete Config",
    "blacklist": "Blacklist",
    "whitelist": "Whitelist",
    "blackwhitelist": "All",
    "manageBlackList": "Blacklist Management",
    "noFeed": "No news.",
    "loading": "Loading",
    "ajaxErrorBotNotRunning": "It seems your ProfitTrailer Bot is not running."
  },
  "alertMsgs": {
    "newConfigurationName": "New Configuration Name",
    "exit": "Exit",
    "cancelBtn": "Cancel",
    "stop": "Stop",
    "stopAlert": "Are you sure, you want to stop ProfitTrailer?",
    "stopBtn": "Stop",
    "noPwd": "Please enable password/config in your application file to enable this function.",
    "sureText": "Are you sure?",
    "switchConfigText": "This will immediately change the configuration that your bot is using to trade to ",
    "confirmText": "Yes, activate ",
    "switchedText": "Switched!",
    "hotConfig": "Enter a Hot Config command for ",
    "inputPlaceholder": "Type your command",
    "submitBtn": "Submit",
    "sent": "Sent",
    "cancelled": "Cancelled",
    "fileStillUnsaved": "Your file is as you left it, still unsaved.",
    "to": " to ",
    "recoverFile": "You will not be able to recover this file!",
    "deleted": "Deleted!",
    "sureTo": "Are you sure you want to ",
    "willWork": "This will work",
    "resetQues": "RESET?",
    "reset": "RESET",
    "resetTestModeData": "Are you sure you want to reset ALL DATA???",
    "resettingPT": "Resetting ProfitTrailer...",
    "panicSell": "PANIC SELL?",
    "turningOnPanicSellWarning": "WARNING: TURNING ON PANIC SELL AND SAVING THIS FORM WILL IMMEDIATELY SELL ALL OF YOUR PAIRS AT CURRENT MARKET VALUE.",
    "ok": "OK",
    "setting": "Setting: ",
    "noTip": "No tip!",
    "newConfigName": "Enter a name for your new configuration.",
    "save": "Save",
    "maxConfigurations": "You have reached the maximum number ({{maxConfigsAllowed}}) of allowed configurations.",
    "cancelOrderConfirm": "Are you sure you want to cancel the open order #{{orderNumber}} {{pair}} ",
    "cancelOrderBtn": "Cancel order #{{orderNumber}}",
    "shareConfirm": "Do you want to share {{activeConfig}} and make it publicly available to the ProfitTrailer community?",
    "share": "Share!",
    "maybeLater": "Maybe later!",
    "submittedOrder": "Submitted {{buyOrSell}} order for {{pairname}}",
    "errorswitching": "Error switching configuration.",
    "endPointNotImplemented": "ENDPOINT NOT YET IMPLEMENTED: ",
    "cancelledOrderNumber": "Canceled order number {{orderNumber}}",
    "unsavedChangesOnThisTab": "You have unsaved changes on this tab. You can save your changes now and be redirected on success, or click Cancel to return",
    "copiedToNewConfig": "Settings from the configuration you are currently editing ({{editingConfig}}) will be copied to this new configuration",
    "pendingTitle": "Send {{pair}} To Pending",
    "pendingText": "Enter a target price for the pair",
    "pendingPlaceholder": "Enter Target Price for: {{pair}}",
    "pendingConfirm": "Send To Pending",
    "boughtCostTitle": "Enter Bought Cost for {{pair}}",
    "boughtCostText": "You can find the formatting of the bought cost command in our wiki. Check the link in the footer.",
    "boughtCostPlaceholder": "Enter Bought Cost for: {{pair}}",
    "buyRecord": "Add New Buy Record",
    "salesRecord": "Add New Sales Record",
    "newRecordText": "Are you sure you want to add the record with the following information for: {{pair}}",
    "addRecord": "Add Record",
    "recordAdded": "Record Added",
    "recordError": "You have empty fields. Please fill out all and try again.",
    "somethingWrong": "Something went wrong.",
    "filledProperties": "Please try again and make sure all fields are filled properly.",
    "noneChosen": "You need to choose a type",
    "insertValue": "YOu need to insert a value"
  },
  "currencyNames": {
    "usd": "United States Dollar",
    "ad": "Australian Dollar",
    "bl": "Bulgarian Lev",
    "br": "Brazilian Real",
    "cd": "Canadian Dollar",
    "sf": "Swiss Franc",
    "cy": "Chinese Yuan",
    "ck": "Czech Koruna",
    "dk": "Danish Krone",
    "ps": "Pound Sterling",
    "hkd": "Hong Kong Dollar",
    "crk": "Croatian Kuna",
    "hf": "Hungarian Forint",
    "ir": "Indonesia Rupiah",
    "ins": "Israeli New Shekel",
    "inr": "Indian Rupee",
    "jy": "Japanese Yen",
    "kw": "Korean Won",
    "mp": "Mexican Peso",
    "mr": "Malaysian Ringgit",
    "nk": "Norwegian Krone",
    "nzd": "New Zealand Dollar",
    "pp": "Philippine peso",
    "pz": "Polish Zloty",
    "rl": "Romanian Leu",
    "rr": "Russia Ruble",
    "sk": "Swedish Krona",
    "tb": "Thailand Baht",
    "tl": "Turkish Lira",
    "saf": "South African Rand",
    "er": "Euro",
    "sd": "Singapore Dollar"
  },
  "configSection": {
    "activeConfig": "Active Config",
    "market": "Market",
    "choose": "Choose...",
    "startBalance": "Start Balance",
    "keepBalance": "Keep Balance",
    "keepBalancePer": "Keep Balance %",
    "initialCostPerc": "Initial Cost %",
    "priceTriggerMarket": "Price Trigger Market",
    "priceMarket": "Price Market",
    "priceRise": " Price Rise",
    "riseRecover": " Rise Recover",
    "recover": " + Recover",
    "dropRecover": " Drop Recover",
    "hypenRecover": " - Recover",
    "consecutiveBuy": "Consecutive Buy",
    "consecutiveSell": "Consecutive Sell",
    "buyStrategyA": "Buy Strategy A",
    "buyA": "Buy A",
    "buyValueA": "Buy Value A",
    "buyValA": "Buy Val. A",
    "buyLimitA": "Buy Limit A",
    "buyLimA": "Buy Lim. A",
    "buyStrategyB": "Buy Strategy B",
    "buyStrategyC": "Buy Strategy C",
    "buyStrategyD": "Buy Strategy D",
    "buyStrategyE": "Buy Strategy E",
    "buyB": "Buy B",
    "buyValueB": "Buy Value B",
    "buyValB": "Buy Val. B",
    "buyValC": "Buy Val. C",
    "buyValD": "Buy Val. D",
    "buyValE": "Buy Val. E",
    "buyLimitB": "Buy Limit B",
    "buyLimitC": "Buy Limit C",
    "buyLimitD": "Buy Limit D",
    "buyLimitE": "Buy Limit E",
    "buyC": "Buy C",
    "buyD": "Buy D",
    "buyE": "Buy E",
    "buyValueC": "Buy Value C",
    "buyValueD": "Buy Value D",
    "buyValueE": "Buy Value E",
    "buyLimB": "Buy Lim. B",
    "buyLimC": "Buy Lim. C",
    "buyLimD": "Buy Lim. D",
    "buyLimE": "Buy Lim. E",
    "trailingBuy": "Trailing Buy",
    "trailBuy": "Trail Buy",
    "maxPairs": "Max. Pairs",
    "minBuyVolume": "Min. Buy Volume",
    "minVol": "Min. Vol",
    "minBuyPrice": "Min. Buy Price",
    "minPrice": "Min. Price",
    "maxBuySpread": "Max. Buy Spread",
    "maxSpread": "Max. Spread",
    "minOrderbookPerc": "Min. Orderbook %",
    "buyMinChgPerc": "Buy Min. Chg. %",
    "buyMaxChgPerc": "Buy Max. Chg. %",
    "minCoinAge": "Min. Coin Age",
    "rebuyTimeout": "Rebuy Timeout",
    "sellStrategyA": "Sell Strategy A",
    "sellA": "Sell A",
    "sellValueA": "Sell Value A",
    "sellValA": "Sell Val. A",
    "sellValueALimit": "Sell Value A Limit",
    "sellValALim": "Sell Val. A Lim",
    "sellStrategyB": "Sell Strategy B",
    "sellStrategyC": "Sell Strategy C",
    "sellStrategyD": "Sell Strategy D",
    "sellStrategyE": "Sell Strategy E",
    "sellB": "Sell B",
    "sellValueB": "Sell Value B",
    "sellValB": "Sell Val. B",
    "sellValC": "Sell Val. C",
    "sellValD": "Sell Val. D",
    "sellValE": "Sell Val. E",
    "sellValBLim": "Sell Val. B Lim",
    "sellValCLim": "Sell Val. C Lim",
    "sellValDLim": "Sell Val. D Lim",
    "sellValELim": "Sell Val. E Lim",
    "sellC": "Sell C",
    "sellD": "Sell D",
    "sellE": "Sell E",
    "sellValueC": "Sell Value C",
    "sellValueD": "Sell Value D",
    "sellValueE": "Sell Value E",
    "sellValueBLimit": "Sell VAlue B Limit",
    "sellValueCLimit": "Sell VAlue C Limit",
    "sellValueDLimit": "Sell VAlue D Limit",
    "sellValueELimit": "Sell VAlue E Limit",
    "trailingProfit": "Trailing Profit",
    "smartTrailingType": "Smart Trailing Type",
    "smartTrailing": "Smart Trailing",
    "maxProfit": "Max. Profit",
    "takeProfitPerc": "Take Profit %",
    "takeProfitWait": "Take Profit Wait",
    "TakeProfitMovePerc": "Take Profit Move %",
    "pendingOrderWait": "Pending Order Wait",
    "pendingWait": "Pending Wait",
    "cancelPendingperc": "Cancel Pending %",
    "stopLossTrigger": "Stop Loss Trigger",
    "stopLossTimeout": "Stop Loss Timeout",
    "maxCost": "Max. Cost",
    "maxBuyTimes": "Max. Buy Times",
    "somBuyTrigger": "SOM Buy Trigger",
    "buyTriggers": "Buy Trigger(s)",
    "buyPercentages": "Buy Percentage(s)",
    "buyPercs": "Buy %(s)",
    "bbPeriod": "BBPeriod",
    "bbLength": "BB Length",
    "bbStd": "BB STD",
    "obvPeriod": "OBV Period",
    "obvLength": "OBV Length",
    "obvSignal": "OBV Signal",
    "smaPeriod": "SMA Period",
    "smaFastLength": "SMA Fast Length",
    "smaSlowLength": "SMA Slow Length",
    "smaCrossCandles": "SMA Cross Candles",
    "emaPeriod": "EMA Period",
    "emaFastLength": "EMA Fast Length",
    "emaSlowLength": "EMA Slow Length",
    "emaCrossCandles": "EMA Cross Candles",
    "rsiPeriod": "RSI Period",
    "rsiLength": "RSI Length",
    "stochrsiPeriod": "STOCHRSI Period",
    "stochrsiRsiLen": "STOCHRSI RSI Len.",
    "stochrsiStochLen": "STOCHRSI Stoch Len.",
    "macdPeriod": "MACD Period",
    "macdFastLength": "MACD Fast Length",
    "macdSlowLength": "MACD Slow Length",
    "macdSignal": "MACD Signal",
    "stochPeriod": "STOCH Period",
    "stochLength": "STOCH Length",
    "k": "K",
    "d": "D",
    "stochrsidPeriod": "STOCHRSID Period",
    "stochrsidRsiLen": "STOCHRSID RSI Len.",
    "stochrsidStochLen": "STOCHRSID Stoch Len.",
    "stochrsicrossPeriod": "STOCHRSICROSS Period",
    "stochrsicrossRsiLen": "STOCHRSICROSS RSI Len.",
    "stochrsicrossStochLen": "STOCHRSICROSS Stoch Len.",
    "stochrsikRsiLen": "STOCHRSIK RSI Len.",
    "stochrsikStochLen": "STOCHRSIK Stoch Len.",
    "stochrsikPeriod": "STOCHRSIK Period",
    "crossCandles": "Cross Candles",
    "somTriggerLength": "SOM Trigger Length",
    "initialCost": "Initial Cost",
    "priceDrop": " Price Drop",
    "grow": "Grow",
    "shrink": "Shrink",
    "blacklist": "Blacklist",
    "anderson": "ANDERSON",
    "dcaEnabled": "DCA Enabled",
    "hmacrosscandles": "HMA Cross Candles",
    "hmacandleperiod": "HMA Candle Period",
    "hmafastlength": "HMA Fast Length",
    "hmaslowlength": "HMA Slow Length",
    "demacrosscandles": "DEMA Cross Candles",
    "demacandleperiod": "DEMA Candle Period",
    "demafastlength": "DEMA Fast Length",
    "demaslowlength": "DEMA Slow Length",
    "pdhighcandleperiod": "PDHIGH Candle Period",
    "pendingGainPercentage": "Pending Gain %",
    "cancelPendingTrigger": "Cancel Pending Trigger",
    "combinedCancelPendingTrigger": "Combined Cancel Pending Trigger",
    "TakeProfitSafetyArm": "Take Profit Safety Arm",
    "TakeProfitSafetyFire": "Take Profit Safety Fire",
    "trailingStopLossTrigger": "Trailing Stop Loss Trigger",
    "trailingStopLossTriggerArm": "Trailing Stop Loss Trigger Arm",
    "buyLeverage": "Buy Leverage",
    "strategyDirectionA": "Buy Strategy Direction A",
    "strategyDirectionB": "Buy Strategy Direction B",
    "strategyDirectionC": "Buy Strategy Direction C",
    "strategyDirectionD": "Buy Strategy Direction D",
    "strategyDirectionE": "Buy Strategy Direction E"
  },
  "proToolsPage": {
    "TotalCurrentValue": "Total Current Value",
    "ProfitToday": "Profit Today",
    "ProfitYesterday": "Profit Yesterday",
    "ProfitLastSevenDays": "Profit Last 7 Days",
    "DailyCumulativeProfit": "Daily / Cumulative Profit",
    "DailyProfits": "Daily Profits",
    "CumulativeProfits": "Cumulative Profits",
    "Daily": "Daily",
    "Cummulative": "Cummulative",
    "CurrentValueDistribution": "Current Value Distribution",
    "CurrentValueDistributionChart": {
      "Pairs": "Pairs",
      "Pending": "Pending",
      "DCA": "DCA",
      "Balance": "Balance"
    },
    "Balance": "Balance",
    "Pairs": "Pairs",
    "Pending": "Pending",
    "DCA": "DCA",
    "DailyProfit": "Daily Profit",
    "MonthlyProfit": "Monthly Profit",
    "LastHour": "Last Hour",
    "CurrentHoldings": "Current Holdings",
    "MonthlyProfits": "Monthly Profits",
    "ProfitablePairs": "Profitable Pairs",
    "Top10Last30": "Top 10 last 30 days",
    "MostProfitable": "Most Profitable",
    "LeastProfitable": "Least Profitable",
    "MostSales": "Most Sales",
    "CurrentHoldingTable": {
      "Category": "Category",
      "Pairs": "Pairs",
      "Cost": "Cost",
      "Value": "Value",
      "Profit": "Profit",
      "DCA": "DCA",
      "Pending": "Pending",
      "Dust": "Dust"
    },
    "MonthlyProfitsTable": {
      "Month": "Month",
      "Sells": "Sells",
      "Profit": "Profit",
      "AvgProfitPercentage": "Avg. Profit %"
    },
    "DCACalculator": {
      "DCATitle": "DCA Calculator",
      "DCAType": "Choose DCA type",
      "StartBalance": "Start Balance",
      "Pairs": "Pairs",
      "DCALevels": "DCA Levels",
      "InitialBuy": "Initial Buy",
      "InitialBuyPercentage": "Initial Buy Percentage",
      "InitialSwitchValue": "Switch to Value",
      "InitialSwitchPercentage": "Switch to Percentage",
      "DCACoins": "Coins",
      "DCATriggers": "DCA Triggers",
      "Calculate": "Calculate",
      "BalanceNeeded": "Balance Needed",
      "OverUnderBalance": "Over/Under Total Balance",
      "OverUnderBalancePercentage": "Over/Under Total Balance Percentage",
      "DCACoinTable": {
        "DCA": "DCA",
        "Cost": "Cost",
        "Trigger": "Trigger",
        "Coins": "Coins",
        "TotalCoins": "Total Coins",
        "TotalCost": "Total Cost"
      },
      "DCATables": {
        "Pair": "Pair",
        "Pairs": "Pairs",
        "DCA": "DCA",
        "TriggerThHeader": "DCA Trigger / Pair",
        "GrantThHeader": "DCA / Pairs",
        "Total": "Total"
      }
    }
  },
  "appNotification": {
    "notifications": "Notification",
    "confirmText": "OK"
  },
  "statsPage": {
    "generalStats": "General Stats",
    "coinSpecific": "Coin Specific",
    "showAsTableData": "Show as Tables",
    "dailyProfits": "Daily Profits",
    "dailyStats": "Daily Stats",
    "monthlyProfits": "Monthly Profits",
    "monthlyStats": "Monthly Stats",
    "salesDistribution": "Sales Distribution",
    "salesDistributionAbbr": "Sales Distribution Abbreviations",
    "dSpentVsEarned": "Daily: Spent vs Earned",
    "mSpentVsEarned": "Monthly: Spent vs Earned",
    "dBuysVsSells": "Daily: Buys vs Sales",
    "mBuysVsSells": "Monthly: Buys vs Sales",
    "sales": "Sales",
    "buys": "Buys",
    "spent": "Spent",
    "earned": "Earned",
    "profits": "Profits",
    "totalCurrentValue": "Total Current Value",
    "minTCV": "Min. TCV",
    "takeProfit": "Take Profit",
    "takeProfitSafety": "Take Profit Safety",
    "trailingStopLoss": "Trailing Stop Loss",
    "maxProfit": "Max Profit",
    "manual": "Manual",
    "gain": "Gain",
    "mostProfitablePairs": "Most Profitable Pairs",
    "leastProfitablePairs": "Least Profitable Pairs",
    "mostSoldPairs": "Most Sold Pairs",
    "dcaCounter": "Sell DCA Count",
    "avgTradeDuration": "Avg Trade Duration (hours)",
    "timesSold": "Times Sold",
    "profit": "Profit",
    "dcaLevel": "DCA Level",
    "pairsSold": "Pairs Sold",
    "type": "Type",
    "totalBuys": "Total Buys",
    "totalBoughtCost": "Total Bought Cost",
    "totalSells": "Total Sells",
    "totalSellValue": "Total Sell Value",
    "totalProfits": "Total Profits"
  },
  "accountPage": {
    "serverSettings": "Server Settings",
    "userSettings": "User Settings",
    "notifications": "Notifications",
    "SSL": "SSL",
    "debugging": "Debugging",
    "PTN": "PTN",
    "logs": "Logs",
    "PTA": "PT Assistant",
    "provider": "Signal Providers",
    "applicationPort": {
      "header": "Application Port",
      "placeholder": "8081",
      "help": "The port that is being used by the bot. Change this value to something unique (like 8082, etc) if you want to start other instances of the bot on the same machine."
    },
    "siteName": {
      "header": "Site Name",
      "placeholder": "My BTC Bot",
      "help": "Set the unique text you wish to appear in the browser tab (website title). This it also used in Discord and Telegram Notifications."
    },
    "ptFeeder": {
      "header": "PTFeeder Location",
      "placeholder": "/var/opt/pt-feeder/",
      "help": "PTFeeder root folder location"
    },
    "apiToken": {
      "header": "Api Token",
      "placeholder": "kjashd983h2dn9832jdi3d0892h3d",
      "help": "This optional token can be used to allow third party applications to connection to your BOT via a built in API.",
      "randomString": "Generate Random String."
    },
    "serverAddress": {
      "header": "Server Address",
      "placeholder": "123.123.123.123",
      "help": "Bind the Profit trailer instance to a specific WAN/Public IP address. Useful for uses with multiple public IP addresses and multiple bots."
    },
    "serverContextPath": {
      "header": "Server Context Path",
      "placeholder": "/binancebtc",
      "help": "Adds a custom base url to the Web server. Using the example above you would now access ProfitTrailer from http://localhost:8081/binancebtc/monitoring."
    },
    "exchangeURL": {
      "header": "Exchange URL",
      "placeholder": "https://www.binance.com/tradeDetail.html?symbol=%c_%b",
      "help": "Define custom url to be used when a coin pair is clicked in the Web GUI. The %c and %b values are variables based on the coin pair being clicked."
    },
    "logHistory": {
      "header": "Log History",
      "placeholder": "8",
      "help": "Set how many days of sell log history to show in the GUI. Once the set number of days passes, older history will be removed from the bot."
    },
    "runInTestMode": {
      "header": "Run in Test Mode"
    },
    "runOnTestNet": {
      "header": "Run on BitMEX Test Net"
    },
    "marginTrading": {
      "header": "Use margin account"
    },
    "openBrowser": {
      "header": "Auto open browser"
    },
    "startBalance": {
      "header": "Start Balance",
      "placeholder": "0",
      "help": "The balance you had when first starting. Also used to calculate TCV based profit %"
    },
    "profitCalculationMethod": {
      "header": "Profit Calculation Method",
      "help": "The method used to calculate profit displayed on the GUI."
    },
    "buyOrderType": {
      "header": "Buy Order Type",
      "help": "The order type you want ProfitTrailer to buy with."
    },
    "sellOrderType": {
      "header": "Sell Order Type",
      "help": "The order type you want ProfitTrailer to sell with."
    },
    "tradingDelay": {
      "header": "Trading Delay",
      "placeholder": "5",
      "help": "The start delay prevents the bot from trading for the set number of minutes after bootup. This parameter is designed to give you enough time to place the bot in SOM or disable trading, or change your buy/sell strategies before it resumes trading."
    },
    "timezone": {
      "header": "Timezone",
      "help": "Set the timezone ID of the location you live. This will take precedence over server.timezone_offset and will automatically handle daylight saving times."
    },
    "advancedStats": {
      "header": "Adv. Stats",
      "help": "Pro/Advanced Users only: Set to false to disable advanced statistics in the GUI."
    },
    "tableButtons": {
      "header": "Show Buttons in Tables",
      "help": "Shows Buy, Sell and Pending buttons in tables."
    },
    "offlineConfig": {
      "header": "Offline Config",
      "help": "Set to true to enable local offline storage of settings instead of on the PT database. Settings (excluding application.properties) will still be communicated to the PT server for encryption but will be stored locally in a file named offlineData. Settings must still be edited using the web GUI."
    },
    "enableNotifications": {
      "header": "GUI Notifications",
      "help": "Set to true to disable the GUI notifications (errors, config changes etc)."
    },
    "enableAdvancedNotifications": {
      "header": "Advanced Notifications",
      "help": "Set to true and save your settings to enable Advanced Notifications. "
    },
    "advancedConfig": {
      "header": "Adv. Config",
      "help": "Pro/Advanced Users only: Set to false to disable advanced statistics in the GUI."
    },
    "hideBuySell": {
      "header": "Hide Buy/Sell",
      "help": "Pro/Advanced Users only: Set to false to disable advanced statistics in the GUI."
    },
    "skin": {
      "header": "Theme",
      "help": "Choose between three possible skins dark, light and default."
    },
    "currency": {
      "header": "Currency",
      "help": "Set your desired currency for values in the Web GUI to be displayed in."
    },
    "language": {
      "header": "Language",
      "help": "Set your desired localization for the Web GUI."
    },
    "botToken": {
      "header": "Bot Token",
      "placeholder": "Your Bot Token",
      "help": "Your Bot Token."
    },
    "telegramChatId": {
      "header": "Chat ID",
      "placeholder": "Your Chat ID",
      "help": "Your Chat ID."
    },
    "PTNSellMessage": {
      "header": "Sell Message",
      "help": "#Available variables: dcaCount, instanceName, strategies, quantity, rate, total, profit, dollar, boughtDate, percentage"
    },
    "PTNBuyMessage": {
      "header": "Buy Message",
      "help": "#Available variables: dcaCount, instanceName, quantity, rate, avgCost, total, percentage"
    },
    "PTNErrorMessage": {
      "header": "Error Message",
      "help": "#Add error messages that need to be ignored seperated by a comma i.e. SomeKindOfExchangeError,AnotherExchangeError. Can be BinanceWebSocketAdapterKline,APIKEY_INVALID"
    },
    "PTNSellMessageEnabled": "Sell Messages",
    "PTNBuyMessageEnabled": "Buy Messages",
    "PTNErrorMessageEnabled": "Error Messages",
    "PTNCommandsMessageEnabled": "Commands",
    "discordChatId": {
      "header": "Chat",
      "placeholder": "Channel Name",
      "help": "The channel name that the bot will post notifications in."
    },
    "newSignal": {
      "header": "New Signal Notification",
      "help": "Set to true to enable a notification to be sent when a new signal is received."
    },
    "startup": {
      "header": "Startup Notification",
      "help": "Set to true to add notifications on startup."
    },
    "shutdown": {
      "header": "Shutdown Notification",
      "help": "Set to true to add notifications on shutdown. Will not work for unexpected shutdowns."
    },
    "newSignalChannel": {
      "header": "New Signal Notification Channel",
      "placeholder": "Channel Name",
      "help": "A separate channel for new SIGNAL notifications to be sent to. If nothing is set Chat from discord instance 1 will be used instead."
    },
    "keyStore": {
      "header": "SSL Key Store",
      "placeholder": "/etc/letsencrypt/live/yourdomain/keystore.p12",
      "help": "Add the path to your keystore file."
    },
    "keyStorePW": {
      "header": "SSL Key Store Password",
      "placeholder": "Your Password",
      "help": "Insert your Key Store Password."
    },
    "keyPW": {
      "header": "SSL Key Password",
      "placeholder": "Your Password",
      "help": "Insert your Key Password."
    },
    "keyStoreType": {
      "header": "SSL Key Store Type",
      "placeholder": "PKCS12",
      "help": "Insert Key Store Type."
    },
    "keyAlias": {
      "header": "SSL Key Alias",
      "placeholder": "Your Alias",
      "help": "Insert Key Store Alias."
    },
    "notificationAlerts": {
      "success": "Test Notification Sent Successfully",
      "error": "An error occurred while sending the notification.",
      "empty": "Please fill out the appropriate fields."
    },
    "telegramInstance": "Telegram Instance {{number}}",
    "discordInstance": "Discord Instance {{number}}",
    "testSettings": "Test Settings",
    "setupTelegram": "Set up Telegram Notifications",
    "setupDiscord": "Set up Discord Notifications",
    "saveUserSettings": "Save User Settings",
    "saveServerSettings": "Save Server Settings",
    "saveNotificationSettings": "Save Notification Settings",
    "saveSSLSettings": "Save SSL Settings",
    "saveProviderSettings": "Save Provider Settings",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "settingsSaved": "Settings have been saved.",
    "settingSaveError": "Something went wrong while saving your settings.",
    "notChanged": "You have not changed any settings",
    "reloadOrRefresh": "Your Bot might need a restart/reload after changing settings.",
    "PTAssistant": {
      "licenseInfo": "License Information",
      "licenseType": "License Type",
      "exchange": "Exchange",
      "apiKeys": "Api Keys",
      "extraSlots": "Extra Slots",
      "configsAllowed": "Allowed Configs",
      "used": "used",
      "expirationDate": "Expiration Date",
      "redeemVoucher": {
        "header": "Redeem Voucher",
        "button": "Redeem Voucher",
        "inputHelp": "Enter a valid Voucher Key.",
        "selectHelp": "Select the category for your Voucher Key"
      },
      "currentApiKey": {
        "header": "Current Api Keys",
        "key": "Key",
        "expiration": "Expiration",
        "lastActiveTime": "Last Active Time"
      },
      "licenseUpgrade": "License Upgrade",
      "apiSlots": "Api Slots",
      "config": "Configs",
      "signal": "Signals",
      "toastr": {
        "somethingWrong": "Something went wrong.",
        "voucherTitle": "Redeem Voucher",
        "voucherText": "Make sure you have entered the voucher code correctly.",
        "voucherSuccess": "Voucher has been redeemed",
        "specifyVoucher": "You have not specified a Vouhcer Code"
      }
    },
    "signalProvider": {
      "chooseProvider": "Choose your Providers",
      "selectHelpText": "Select the signal providers you want this bot to accept signals from.\n Leave ALL Disabled to accept signals from ALL your providers.",
      "selectFromThese": "You can select from the following list of providers",
      "SGNLErrorText": "You have not yet bought a signal package or redeemed your voucher with the PT Assistant.",
      "providerList": "Current list of providers",
      "saveProviderSettings": "Save Signal Provider Settings"
    }
  },
  "closedCandles": "Strategy using Closed Candles",
  "hotConfig": {
    "swalTitle": "Save Hot Config Command",
    "swalText": "Are you sure you want to save the following command: ",
    "startBalanceError": "Please insert a proper start balance.",
    "balanceError": "Please insert a proper balance.",
    "buyTimesError": "Please select a pair and insert the number of DCA levels.",
    "boughtPriceError": "Please select a pair and insert a proper bought price.",
    "saveBtn": "Save",
    "choosePair": "Choose A Pair",
    "testModeBalance": {
      "title": "Test Mode Balance",
      "help": "Set or change the starting Balance for test bots. Decimals higher than or equal to 0."
    },
    "setBuyTimes": {
      "title": "DCA Set Buy Times",
      "help": "Set the DCA level on a coin. If you want ProfitTrailer to see it has DCA'd 2 times set 2"
    },
    "boughtPrice": {
      "title": "Set Bought Price",
      "help": "Set the bought price if the bot could not calculate the price correctly. The price you put in here will be set as the current average price of your pair."
    }
  },
  "addRecordModal": {
    "addNewBuy": "Add New Buy Record",
    "addNewSale": "Add New Sales Record"
  },
  "reserveAmount": {
    "title": "Reserve an amount of {{pair}}",
    "text": "Enter an amount you want to reserve",
    "confirm": "Reserve",
    "successText": "Reserved"
  },
  "releaseAmount": {
    "title": "Release an amount of {{pair}}",
    "text": "Enter an amount you want to release",
    "confirm": "Release",
    "successText": "Released"
  },
  "reversal": {
    "title": "Cancel Reversal for coin: {{pair}}",
    "text": "Are you sure you want to cancel the reversal for this coin?",
    "confirm": "Cancel Reversal",
    "close": "Close",
    "success": "Successfully cancelled"
  }
}
